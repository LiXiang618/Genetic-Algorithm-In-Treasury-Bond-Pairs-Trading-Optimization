retList$mean <- meanSum/length(v)
return(retList)
}
mutlinks(cl,1:1000)
mutlinks <- function(cls,v) {
n <- length(v)
nc <- length(cls)
options(warn=-1)
ichunks <- split(1:n,1:nc)
options(warn=0)
vList <- list()
vList$vector <- v
vList$mean <- mean(v)
counts <- clusterApply(cls,ichunks,func,vList)
retList <- list()
tmp <- c()
meanSum <- 0
print(length(counts))
for(i in length(counts))
{
tmp <- cbind(tmp,counts[[i]]$abs)
meanSum <- meanSum + counts[[i]]$mean*length(counts[[i]]$abs)
}
retList$abs <- array(t(tmp))
print(tmp)
retList$mean <- meanSum/length(v)
return(retList)
}
mutlinks(cl,1:1000)
debug(mutlinks(cl,1:1000))
debug(mutlinks)
mutlinks(cl,1:1000)
mutlinks <- function(cls,v) {
n <- length(v)
nc <- length(cls)
options(warn=-1)
ichunks <- split(1:n,1:nc)
options(warn=0)
vList <- list()
vList$vector <- v
vList$mean <- mean(v)
counts <- clusterApply(cls,ichunks,func,vList)
retList <- list()
tmp <- c()
meanSum <- 0
for(i in length(counts))
{
tmp <- cbind(tmp,counts[[i]]$abs)
meanSum <- meanSum + counts[[i]]$mean*length(counts[[i]]$abs)
}
retList$abs <- array(t(tmp))
retList$mean <- meanSum/length(v)
return(retList)
}
debug(mutlinks)
mutlinks(cl,1:1000)
counts
tmp
counts[[i]]
mutlinks <- function(cls,v) {
n <- length(v)
nc <- length(cls)
options(warn=-1)
ichunks <- split(1:n,1:nc)
options(warn=0)
vList <- list()
vList$vector <- v
vList$mean <- mean(v)
counts <- clusterApply(cls,ichunks,func,vList)
retList <- list()
tmp <- c()
meanSum <- 0
for(i in 1:length(counts))
{
tmp <- cbind(tmp,counts[[i]]$abs)
meanSum <- meanSum + counts[[i]]$mean*length(counts[[i]]$abs)
}
retList$abs <- array(t(tmp))
retList$mean <- meanSum/length(v)
return(retList)
}
mutlinks(cl,1:1000)
mapply(1:10,mean)
mapply(mean,1:10)
arg_max <- function(domain,func)
{
range <- mapply(func,domain)
domain(which.max(range))
}
arg_max(-10:5,function(x) x^2)
debug()
debug(arg_max)
arg_max(-10:5,function(x) x^2)
domain
func
range
arg_max <- function(domain,func)
{
range <- mapply(func,domain)
domain[which.max(range)]
}
arg_max(-10:5,function(x) x^2)
debug(arg_max)
arg_max(-5:5, function(x) x^2)
arg_max(-10:5,function(x) x^2)
arg_max <- function(domain,func)
{
range <- mapply(func,domain)
domain[which.max(range)]
}
arg_max(-10:5,function(x) x^2)
arg_max(-5:5, function(x) x^2)
?which.max
which.max(abs(-5:5))
which.max(abs(-5:5),first = FALSE)
arg_max <- function(domain,func)
{
range <- mapply(func,domain)
domain[which(domain==max(range))]
}
arg_max(-10:5,function(x) x^2)
arg_max(-5:5, function(x) x^2)
arg_max(-10:5,function(x) x^2)
arg_max <- function(domain,func)
{
range <- mapply(func,domain)
domain[which(range==max(range))]
}
arg_max(-10:5,function(x) x^2)
arg_max(-5:5, function(x) x^2)
arg_min <- function(domain,func)
{
range <- mapply(func,domain)
domain[which(range==min(range))]
}
arg_min(-10:5,function(x) x^2)
arg_min(-5:5, function(x) x^2)
arg_min(-10:5,function(x) -x^2)
arg_min(-5:5, function(x) -x^2)
testList <- list()
testList$a <- c(1,2,3)
testList$b <- c(2,3,4)
mapply(testList,is.numeric)
?lapply
lapply(testList,is.numeric)
unlist(lapply(testList,is.numeric))
any(unlist(lapply(testList,is.numeric)))
testList <- list()
testList$a <- c(1,2,3)
testList$b <- c("2","3","4")
anyList(testList,is.numeric)
anyList <- function(ls,func)
{
any(unlist(lapply(testList,func)))
}
anyList(testList,is.numeric)
testList <- list()
testList$a <- c("1","2","3")
testList$b <- c("2","3","4")
anyList(testList,is.numeric)
#9
anyList <- function(ls,func)
{
any(unlist(lapply(testList,func)))
}
allList <- function(ls,func)
{
all(unlist(lapply(testList,func)))
}
testList <- list()
testList$a <- c(1,2,3)
testList$b <- c("2","3","4")
anyList(testList,is.numeric)
allList(testList,is.numeric)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp')
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
log(1)
log(1.1)
log(e)
e
e
exp
exp(0)
log()
log(exp(0))
log(exp(2))
log(1)
wage1 = 1000
wage2 = 1100
log(wage1/wage2)
log(wage2/wage1)
wage2 = 1001
log(wage2/wage1)
log(1.01/1)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp')
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
clear(ls=list())
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
shiny::runApp('C:/Users/admin/Desktop/GTJA/Codes/Cointegration/parisapp',8080)
cointegrationTestPortfolioCollection
cointegrationTestPortfolioCollection[[1]]
cointegrationTestPortfolioCollection
cointegratedPortfolioList
rm(list=ls())
shiny::runApp('C:/Users/admin/Desktop/Research/shinyapp')
8.74/9.70
8.90/9.25
?observe
datatable(iris)
library(DT)
datatable(iris)
shiny::runApp('C:/Users/admin/Desktop/Research/shinyapp')
shiny::runApp('C:/Users/admin/Desktop/Research/shinyapp')
shiny::runApp('C:/Users/admin/Desktop/Research/shinyapp')
shiny::runApp('C:/Users/admin/Desktop/Research/shinyapp')
shiny::runApp('C:/Users/admin/Desktop/Research/shinyapp')
shiny::runApp('C:/Users/admin/Desktop/Research/shinyapp')
shiny::runApp('C:/Users/admin/Desktop/Research/shinyapp')
shiny::runApp('C:/Users/admin/Desktop/Research/shinyapp')
shiny::runApp('C:/Users/admin/Desktop/Research/shinyapp')
shiny::runApp('C:/Users/admin/Desktop/Research/shinyapp')
shiny::runApp('C:/Users/admin/Desktop/Research/shinyapp')
library(quantmod)
setSymbolLookup(WK=list(name='000002.sz',src='yahoo'))
getSymbols("WK")
chartSeries(WK)
setSymbolLookup(GZMT=list(name='600519.ss',src='yahoo'))
getSymbols("GZMT")
chartSeries(GZMT)
GZMT
View(WK)
View(GZMT)
setSymbolLookup(CJSY=list(name="00001.hk",src="yahoo"))
getSymbols("CJSY")
chartSeries(CJSY, up.col='red', dn.col='green', TA="addVo(); addMACD(); addSMA(n=10)")
View(CJSY)
setSymbolLookup(CJSY=list(name="00001.hk",src="yahoo"))
getSymbols("CJSY")
setSymbolLookup(CJSY=list(name="00002.hk",src="yahoo"))
getSymbols("CJSY")
chartSeries(CJSY, up.col='red', dn.col='green', TA="addVo(); addMACD(); addSMA(n=10)")
View(CJSY)
getSymbols("^SSEC")
chartSeries(SSEC, up.col='red', dn.col='green', TA="addVo(); addMACD(); addSMA(n=10)")
View(SSEC)
plot(1:10,1:10)
plot(runif(10), ylim = 0:1)
saveGIF({
for (i in 1:10) plot(runif(10), ylim = 0:1)
})
library(animation)
saveGIF({
for (i in 1:10) plot(runif(10), ylim = 0:1)
})
library(genalg)
library(ggplot2)
dataset <- data.frame(item = c("pocketknife", "beans", "potatoes", "unions", "sleeping bag", "rope", "compass"),
survivalpoints = c(10, 20, 15, 2, 30, 10, 30), weight = c(1, 5, 10, 1, 7, 5, 1))
weightlimit <- 20
chromosome <-  c(1, 0, 0, 1, 1, 0, 0)
dataset[chromosome == 1, ]
cat(chromosome %*% dataset$survivalpoints)
evalFunc <- function(x) {
current_solution_survivalpoints <- x %*% dataset$survivalpoints
current_solution_weight <- x %*% dataset$weight
if (current_solution_weight > weightlimit)
return(0) else return(-current_solution_survivalpoints)
}
iter = 100
GAmodel <- rbga.bin(size = 7, popSize = 200, iters = iter, mutationChance = 0.01,
elitism = T, evalFunc = evalFunc)
solution <- GAmodel$population[nrow(GAmodel$population),]
dataset[solution==1,]
cat(paste(solution %*% dataset$survivalpoints, "/", sum(dataset$survivalpoints)))
animate_plot <- function(x) {
for (i in seq(1, iter)) {
temp <- data.frame(Generation = c(seq(1, i), seq(1, i)), Variable = c(rep("mean",
i), rep("best", i)), Survivalpoints = c(-GAmodel$mean[1:i], -GAmodel$best[1:i]))
pl <- ggplot(temp, aes(x = Generation, y = Survivalpoints, group = Variable,
colour = Variable)) + geom_line() + scale_x_continuous(limits = c(0,
iter)) + scale_y_continuous(limits = c(0, 110)) + geom_hline(y = max(temp$Survivalpoints),
lty = 2) + annotate("text", x = 1, y = max(temp$Survivalpoints) +
2, hjust = 0, size = 3, color = "black", label = paste("Best solution:",
max(temp$Survivalpoints))) + scale_colour_brewer(palette = "Set1") +
opts(title = "Evolution Knapsack optimization model")
print(pl)
}
}
saveGIF(animate_plot(), interval = 0.1, outdir = getwd())
library(animation)
getwd()
setwd("C:/Users/admin/Desktop/一专毕设/Working/R")
saveGIF(animate_plot(),outdir = getwd())
saveGIF(animate_plot())
saveGIF(animate_plot())
iter
x
i <- 1
temp <- data.frame(Generation = c(seq(1, i), seq(1, i)), Variable = c(rep("mean", i), rep("best", i)), Survivalpoints = c(-GAmodel$mean[1:i], -GAmodel$best[1:i]))
tmp
temp
pl <- ggplot(temp, aes(x = Generation, y = Survivalpoints, group = Variable, colour = Variable)) + geom_line() + scale_x_continuous(limits = c(0, iter)) + scale_y_continuous(limits = c(0, 110)) + geom_hline(y = max(temp$Survivalpoints), lty = 2) + annotate("text", x = 1, y = max(temp$Survivalpoints) + 2, hjust = 0, size = 3, color = "black", label = paste("Best solution:", max(temp$Survivalpoints))) + scale_colour_brewer(palette = "Set1") + opts(title = "Evolution Knapsack optimization model")
?aes
Generation
aes(x = Generation, y = Survivalpoints, group = Variable, colour = Variable)
pl <- ggplot(temp,
aes(x = Generation, y = Survivalpoints, group = Variable, colour = Variable))
pl <- ggplot(temp,
aes(x = Generation, y = Survivalpoints, group = Variable, colour = Variable)) +
geom_line()
pl <- ggplot(temp,
aes(x = Generation, y = Survivalpoints, group = Variable, colour = Variable)) +
geom_line() +
scale_x_continuous(limits = c(0, iter)) +
scale_y_continuous(limits = c(0, 110))
pl <- ggplot(temp,
aes(x = Generation, y = Survivalpoints, group = Variable, colour = Variable)) +
geom_line() +
scale_x_continuous(limits = c(0, iter)) +
scale_y_continuous(limits = c(0, 110)) +
geom_hline(y = max(temp$Survivalpoints), lty = 2) +
annotate("text", x = 1, y = max(temp$Survivalpoints)
pl <- ggplot(temp,
aes(x = Generation, y = Survivalpoints, group = Variable, colour = Variable)) +
geom_line() +
scale_x_continuous(limits = c(0, iter)) +
scale_y_continuous(limits = c(0, 110)) +
geom_hline(y = max(temp$Survivalpoints), lty = 2) +
annotate("text", x = 1, y = max(temp$Survivalpoints) + 2,
hjust = 0, size = 3, color = "black", label = paste("Best solution:", max(temp$Survivalpoints))) +
scale_colour_brewer(palette = "Set1")
pl <- ggplot(temp,
aes(x = Generation, y = Survivalpoints, group = Variable, colour = Variable)) +
geom_line() +
scale_x_continuous(limits = c(0, iter)) +
scale_y_continuous(limits = c(0, 110)) +
geom_hline(y = max(temp$Survivalpoints), lty = 2) +
annotate("text", x = 1, y = max(temp$Survivalpoints) + 2,
hjust = 0, size = 3, color = "black", label = paste("Best solution:", max(temp$Survivalpoints))) +
scale_colour_brewer(palette = "Set1") +
opts(title = "Evolution Knapsack optimization model")
pl <- ggplot(temp,
aes(x = Generation, y = Survivalpoints, group = Variable, colour = Variable)) +
geom_line() +
scale_x_continuous(limits = c(0, iter)) +
scale_y_continuous(limits = c(0, 110)) +
geom_hline(y = max(temp$Survivalpoints), lty = 2)
pl <- ggplot(temp,
aes(x = Generation, y = Survivalpoints, group = Variable, colour = Variable)) +
geom_line() +
scale_x_continuous(limits = c(0, iter)) +
scale_y_continuous(limits = c(0, 110))
?geom_hline
temp
?geom_hline
pl <- ggplot(temp,
aes(x = Generation, y = Survivalpoints, group = Variable, colour = Variable)) +
geom_line() +
scale_x_continuous(limits = c(0, iter)) +
scale_y_continuous(limits = c(0, 110)) +
geom_hline(yintercept = max(temp$Survivalpoints), lty = 2) +
annotate("text", x = 1, y = max(temp$Survivalpoints) + 2,
hjust = 0, size = 3, color = "black", label = paste("Best solution:", max(temp$Survivalpoints))) +
scale_colour_brewer(palette = "Set1") +
opts(title = "Evolution Knapsack optimization model")
options()
?ggplot
pl <- ggplot(temp,
aes(x = Generation, y = Survivalpoints, group = Variable, colour = Variable)) +
geom_line() +
scale_x_continuous(limits = c(0, iter)) +
scale_y_continuous(limits = c(0, 110)) +
geom_hline(yintercept = max(temp$Survivalpoints), lty = 2) +
annotate("text", x = 1, y = max(temp$Survivalpoints) + 2,
hjust = 0, size = 3, color = "black", label = paste("Best solution:", max(temp$Survivalpoints))) +
scale_colour_brewer(palette = "Set1")
pl
pl <- ggplot(temp,
aes(x = Generation, y = Survivalpoints, group = Variable, colour = Variable)) +
geom_line() +
scale_x_continuous(limits = c(0, iter)) +
scale_y_continuous(limits = c(0, 110)) +
geom_hline(yintercept = max(temp$Survivalpoints), lty = 2) +
annotate("text", x = 1, y = max(temp$Survivalpoints) + 2,
hjust = 0, size = 3, color = "black", label = paste("Best solution:", max(temp$Survivalpoints))) +
scale_colour_brewer(palette = "Set1") +
opts(title = "Evolution Knapsack optimization model")
library(ggplot2)
pl <- ggplot(temp,
aes(x = Generation, y = Survivalpoints, group = Variable, colour = Variable)) +
geom_line() +
scale_x_continuous(limits = c(0, iter)) +
scale_y_continuous(limits = c(0, 110)) +
geom_hline(yintercept = max(temp$Survivalpoints), lty = 2) +
annotate("text", x = 1, y = max(temp$Survivalpoints) + 2,
hjust = 0, size = 3, color = "black", label = paste("Best solution:", max(temp$Survivalpoints))) +
scale_colour_brewer(palette = "Set1") +
opts(title = "Evolution Knapsack optimization model")
pl <- ggplot(temp,
aes(x = Generation, y = Survivalpoints, group = Variable, colour = Variable)) +
geom_line() +
scale_x_continuous(limits = c(0, iter)) +
scale_y_continuous(limits = c(0, 110)) +
geom_hline(yintercept = max(temp$Survivalpoints), lty = 2) +
annotate("text", x = 1, y = max(temp$Survivalpoints) + 2,
hjust = 0, size = 3, color = "black", label = paste("Best solution:", max(temp$Survivalpoints))) +
scale_colour_brewer(palette = "Set1") +
ggtitle("Evolution Knapsack optimization model")
pl
animate_plot <- function(x) {
for (i in seq(1, iter)) {
temp <- data.frame(Generation = c(seq(1, i), seq(1, i)), Variable = c(rep("mean", i), rep("best", i)), Survivalpoints = c(-GAmodel$mean[1:i], -GAmodel$best[1:i]))
pl <- ggplot(temp,
aes(x = Generation, y = Survivalpoints, group = Variable, colour = Variable)) +
geom_line() +
scale_x_continuous(limits = c(0, iter)) +
scale_y_continuous(limits = c(0, 110)) +
geom_hline(yintercept = max(temp$Survivalpoints), lty = 2) +
annotate("text", x = 1, y = max(temp$Survivalpoints) + 2,
hjust = 0, size = 3, color = "black", label = paste("Best solution:", max(temp$Survivalpoints))) +
scale_colour_brewer(palette = "Set1") +
ggtitle("Evolution Knapsack optimization model")
print(pl)
}
}
saveGIF(animate_plot())
saveGIF(animate_plot(),interval = 0.1, outdir = getwd())
setwd("C:/Users/admin/Desktop/一专毕设/Working/R")
load.library <- function(package_name) {
package_name <- as.character(match.call()[[2]])
if (!require(package_name, character.only = T)) {
install.packages(package_name)
require(package_name)
}
}
